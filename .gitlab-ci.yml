stages:
  - build
  - publish 

variables:
  DOCKER_HOST: tcp://localhost:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

# services:
#   - name: docker:20.10.17-dind
#     command: ["--mtu=1440", "--experimental"]

.downgrade_to_xenial: &downgrade_to_xenial
  - find -iname '*.qml' | xargs -I {} sed -i 's/import Lomiri\./import Ubuntu./g' {} 
  - sed -i 's/"framework".*/"framework":\  "ubuntu-sdk-16.04.5"/g' manifest.json
  - find -iname '*.apparmor*' | xargs -I {} sed -i 's/"policy_version".*/"policy_version":\  16.04/g' {}


.set_build_environment: &set_build_environment
  - for c in $(set | cut -d '=' -f 1); do unset $c; done > /dev/null 2>&1 || true
  - export HOME=/home/phablet
  - export PATH=/usr/local/go/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
  - export CGO_ENABLED=1
  - export QT_QPA_PLATFORMTHEME=ubuntuappmenu
  - export QT_DOCKER=false 
  - export QT_PKG_CONFIG=true
  - export QT_UBPORTS=false 
  - export QT_UBPORTS_ARCH=arm64
  - export QT_UBPORTS_VERSION=xenial
  - export GO111MODULE=off
  - export TERM=linux
  - export GOPATH=/home/phablet/work

.clean_build: &clean_build
  - find ./ -iname moc\[_\.\]\* -exec rm {} \;
  - find ./ -iname rcc\[_\.\]\* -exec rm {} \;

build_16.04:
  stage: build
  image: registry.bendingtherules.nl/docker-images/ubuntu-touch:16.04
  environment:
    name: BUILD 
  before_script:
    - echo "Start build"
  artifacts:
    expire_in: 1 week
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA"
    paths:
      - build/*.click 
  script:
    - dir=$(basename $PWD) && ln -s $PWD ${HOME}/work/src && cd ${HOME}/work/src/$dir
    - *set_build_environment
    - *clean_build
    - *downgrade_to_xenial
    - go get -v -d
    - ./build.sh
  when: manual
  tags: 
    - arm64

publish_16.04:
  stage: publish 
  image: registry.bendingtherules.nl/docker-images/alpine-with-tools:latest
  environment:
    name: PUBLISH 
  before_script:
    - echo "Start publish"
  variables:
    GIT_STRATEGY: none
    HEADER_CONTENT_TYPE: 'Content-Type: multipart/form-data' 
  dependencies: 
    - build_16.04
  script:
    - curl 
      --request POST 
      --url "https://open-store.io/api/v3/manage/${OPENSTORE_APP_ID}/revision?apikey=${OPENSTORE_API_KEY}" 
      --header "${HEADER_CONTENT_TYPE}"
      --form channel=xenial 
      --form changelog=None 
      --form file=@$(ls ./build/*.click | head -1)
  when: manual
  
build_20.04:
  stage: build
  image: registry.bendingtherules.nl/docker-images/ubuntu-touch:20.04
  environment:
    name: BUILD 
  before_script:
    - echo "Start build"
  artifacts:
    expire_in: 1 week
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA"
    paths:
      - build/*.click 
  script:
    - dir=$(basename $PWD) && ln -s $PWD ${HOME}/work/src && cd ${HOME}/work/src/$dir
    - *set_build_environment
    - *clean_build
    - go get -v -d
    - ./build.sh
  tags: 
    - arm64

publish_20.04:
  stage: publish 
  image: registry.bendingtherules.nl/docker-images/alpine-with-tools:latest
  environment:
    name: PUBLISH 
  before_script:
    - echo "Start publish"
  variables:
    GIT_STRATEGY: none
    HEADER_CONTENT_TYPE: 'Content-Type: multipart/form-data' 
  dependencies: 
    - build_20.04
  script:
    - curl 
      --request POST 
      --url "https://open-store.io/api/v3/manage/${OPENSTORE_APP_ID}/revision?apikey=${OPENSTORE_API_KEY}" 
      --header "${HEADER_CONTENT_TYPE}"
      --form channel=focal
      --form changelog=None 
      --form file=@$(ls ./build/*.click | head -1)
  when: manual
  
